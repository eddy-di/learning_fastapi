version: '3'

services:
  web:
    build: .
    volumes:
      - .:/app
    ports:
      - 8000:8000
    env_file:
      - .env_compose
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  db:
    image: postgres:15.1-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    expose:
      - 5432
    env_file:
      - .env_compose
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    volumes:
      - redis_data:/data
    expose:
      - 6379
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 1s
      timeout: 3s
      retries: 5

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env_compose
    container_name: celery
    restart: always
    command: ["celery", "--app=app.celery.tasks:app", "worker", "-l", "INFO"]
    depends_on:
      - web

  rabbitmq:
    image: rabbitmq:latest
    hostname: rabbitmq
    restart: always
    container_name: rabbitmq
    volumes:
      - rabbit_data:/var/lib/rabbitmq
    env_file:
      - .env_compose
    ports:
      - 5672:5672
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 30s
      retries: 5

volumes:
  postgres_data:
  redis_data:
  rabbit_data:
